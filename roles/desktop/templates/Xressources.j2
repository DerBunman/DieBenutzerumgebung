/* =====================================
 * << THIS FILE IS MANAGED BY ANSIBLE >>
 * =====================================
 *
 * DO NOT EDIT THIS FILE - CHANGES WILL BE OVERWRITTEN
 * INSTEAD CHANGE THIS FILE IN THE ANSIBLE REPOSITORY.
 */

/*    _                        _             _
  ___| |__   __ _ _ __ ___  __| |   ___ ___ | | ___  _ __ ___
 / __| '_ \ / _` | '__/ _ \/ _` |  / __/ _ \| |/ _ \| '__/ __|
 \__ \ | | | (_| | | |  __/ (_| | | (_| (_) | | (_) | |  \__ \
 |___/_| |_|\__,_|_|  \___|\__,_|  \___\___/|_|\___/|_|  |___/
 generate color schemes
 https://terminal.sexy/
*/


#define col_yellow1    #{{ colors.yellow1 }}
#define col_yellow2    #{{ colors.yellow2 }}
#define col_red1       #{{ colors.red1 }}
#define col_red2       #{{ colors.red2 }}
#define col_magenta1   #{{ colors.magenta1 }}
#define col_magenta2   #{{ colors.magenta2 }}
#define col_blue1      #{{ colors.blue1 }}
#define col_blue2      #{{ colors.blue2 }}
#define col_cyan1      #{{ colors.cyan1 }}
#define col_cyan2      #{{ colors.cyan2 }}
#define col_green1     #{{ colors.green1 }}
#define col_green2     #{{ colors.green2 }}
#define col_black1     #{{ colors.black1 }}
#define col_black2     #{{ colors.black2 }}
#define col_white1     #{{ colors.white1 }}
#define col_white2     #{{ colors.white2 }}

#define col_foreground #{{ colors.foreground }}
#define col_background #{{ colors.background }}
#define col_cursor     #{{ colors.cursor }}
#define col_highlight  #{{ colors.highlight }}
#define col_border     #{{ colors.border }}


! special
*.foreground:   col_foreground
*.background:   col_background
*.cursorColor:  col_cursor

! this should not be called borderColor
! because urxvt will else pick this color
! up and use it to make a messy big border.
*.border:       col_border

! black
*.color0:       col_black1
*.color8:       col_black2

! red
*.color1:       col_red1
*.color9:       col_red2

! green
*.color2:       col_green1
*.color10:      col_green2

! yellow
*.color3:       col_yellow1
*.color11:      col_yellow2

! blue
*.color4:       col_blue1
*.color12:      col_blue2

! magenta
*.color5:       col_magenta1
*.color13:      col_magenta2

! cyan
*.color6:       col_cyan1
*.color14:      col_cyan2

! white
*.color7:       col_white1
*.color15:      col_white2


/* __  __ __ _
   \ \/ // _| |_
    \  /| |_| __|
    /  \|  _| |_
   /_/\_\_|  \__|
*/
!Xft.dpi: 96
Xft.autohint: 0
Xft.lcdfilter:  lcddefault
Xft.hintstyle:  hintfull
Xft.hinting: 1
Xft.antialias:1
Xft.rgba: rgb



/* _   _ ____               _
  | | | |  _ \ __  ____   _| |_
  | | | | |_) |\ \/ /\ \ / / __|
  | |_| |  _ <  >  <  \ V /| |_
   \___/|_| \_\/_/\_\  \_/  \__|
*/
URxvt.saveLines: 32768
URxvt.scrollBar: false
URxvt.foreground: col_foreground
URxvt.background: col_background

!URxvt.foreground:white
!URxvt.background:#000000

! URxvt.highlightTextColor: #000000
URxvt.highlightColor: col_highlight
!URxvt.lineSpace: 1

! does not work ...
!URXvt.letterSpace: -1


URxvt*cjkWidth: false
URxvt.secondaryScroll: true
URxvt.font: xft:RobotoMono Nerd Font Mono:style=Medium:size=9
URxvt.perl-ext-common:default,matcher,font-size
! ,keyboard-select
URxvt.url-launcher: /usr/bin/xdg-open
URxvt.matcher.button: 2
URxvt.tabbed.saveLines: 32768
URxvt.tabbed.scrollBar: false
URxvt.tabbed.tabbar-fg: 3
URxvt.tabbed.tabbar-bg: 0
URxvt.tabbed.tab-fg: 0
URxvt.tabbed.tab-bg: 1
URxvt.tabbed.secondaryScroll: true
URxvt.tabbed.font: xft:RobotoMono Nerd Font Mono:style=Medium:size=9

!Disables the insanely annoying Ctrl+Shift shortcuts that enter ISO14755 mode
URxvt.iso14755: false
URxvt.iso14755_52: false

URxvt*cutchars: =""''

URxvt.keyboard-select.clipboard: true
URxvt.keysym.M-s:         perl:keyboard-select:search
URxvt.keysym.M-Escape:    perl:keyboard-select:activate

URxvt.keysym.C-S-equal:   font-size:increase
URxvt.keysym.C-equal:     font-size:increase
URxvt.keysym.C-0:         font-size:reset
URxvt.keysym.C-slash:     font-size:show

URxvt.keysym.Control-Up:    \033[1;5A
URxvt.keysym.Control-Down:  \033[1;5B
URxvt.keysym.Control-Left:  \033[1;5D
URxvt.keysym.Control-Right: \033[1;5C

! do not scroll with output
URxvt*scrollTtyOutput: false

! scroll in relation to buffer (with mouse scroll or Shift+Page Up)
URxvt*scrollWithBuffer: true

! scroll back to the bottom on keypress
URxvt*scrollTtyKeypress: true

URxvt.transparent: false
URxvt*fading:  20

URxvt.borderless:true
URxvt.colorMode: on
URxvt.cursorBlink: true
URxvt*transparent: false
URxvt.internalBorder: 2

/* ____   ___  _____ ___
  |  _ \ / _ \|  ___|_ _|
  | |_) | | | | |_   | |
  |  _ <| |_| |  _|  | |
  |_| \_\\___/|_|   |___|
*/
/* Shape and location */
rofi.lines: 15
rofi.width: 800
rofi.location: 0

rofi.padding: 10
rofi.bw: 3

/* Colors */
 /* State:         'bg'            , 'fg'           , 'bgalt'      , 'hlbg'     , 'hlfg' */
 rofi.color-normal: col_background , col_foreground , col_black1   , col_border , col_background
 rofi.color-urgent: col_background , col_red1       , col_black1   , col_red1   , col_foreground
 rofi.color-active: col_background , col_green1     , col_black1   , col_green1 , col_black1

 /* State:         'background'    , 'border'       , 'separator' */
 rofi.color-window: col_background , col_black1     , col_border

/* Navigation */
rofi.kb-move-word-back: Control+Left
rofi.kb-move-word-forward: Control+Right
rofi.kb-accept-alt: space

/* Misc */
rofi.font: RobotoMono Nerd Font Regular 10
rofi.disable-history: false
rofi.levenshtein-sort: true
rofi.show-icons: true
rofi.modi:window,run,drun


/* __  _______
   \ \/ /_   _|__ _ __ _ __ ___
    \  /  | |/ _ \ '__| '_ ` _ \
    /  \  | |  __/ |  | | | | | |
   /_/\_\ |_|\___|_|  |_| |_| |_|
*/
XTerm.termName: xterm-256color

XTerm*utf8: 1

xterm*faceName: RobotoMono Nerd Font:style=Medium
xterm*faceSize: 9

XTerm.vt100.scaleHeight: 1.0


! Make 'Alt' key behave as on other terminal emulators
! The default Alt key behavior in xterm is a modifier to send eight bit input characters e.g. to insert Ã¦ by pressing Alt+f. To make Alt instead send a ^[ (escape) key (as in gnome-terminal and konsole), set
XTerm.vt100.metaSendsEscape: true

! Ensure that your locale is set up for UTF-8. If you do not use UTF-8, you may need to force xterm to more strictly follow your locale by setting 
XTerm.vt100.locale: true

! Only select text
xterm*highlightSelection: true
! Remove trailing spaces
xterm*trimSelection: true
XTerm.letterSpace: -1

! Lines of output that you can scroll back over
xterm*saveLines: 32768

! Turn the scrollbar on, and put it on the right
xterm*scrollBar: false
xterm*rightScrollBar: true

! Do not scroll when there is new input e.g. tail -f /var/syslog
xterm*scrollTtyOutput: true


! The following setting changes what xterm considers as characters:
XTerm*charClass: 33:48,36-47:48,58-59:48,61:48,63-64:48,95:48,126:48
XTerm*on3Clicks: regex ([[:alpha:]]+://)?([[:alnum:]!#+,./=?@_~-]|(%[[:xdigit:]][[:xdigit:]]))+
XTerm*VT100*translations: #override Shift <Btn1Up>: exec-formatted("firefox '%t'", PRIMARY)
! *VT100*translations: #override Shift <Btn1Up>: exec-formatted("firefox '%t'", PRIMARY)

! XTerm.vt100.background: black
! XTerm.vt100.foreground: white

xterm*VT100.Translations: #override \
	Ctrl ~Shift <Key>Tab: string(0x1b) string("[27;5;9~") \n\
	Ctrl Shift <Key>Tab: string(0x1b) string("[27;6;9~")


{{ xressources__user_defined | default('/* nothing defined */') }}
