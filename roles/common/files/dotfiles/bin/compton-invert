#!/bin/zsh
# =====================================
# << THIS FILE IS MANAGED BY ANSIBLE >>
# =====================================
#
# DO NOT EDIT THIS FILE - CHANGES WILL BE OVERWRITTEN
# INSTEAD CHANGE THIS FILE IN THE ANSIBLE REPOSITORY.


# compton-invert --- Invert window colors using compton

# Copyright (C) 2015 Wojciech Siewierski

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

############################################
# compton-invert
#
# A compton window compositor wrapper managing the list of windows with inverted colors.
# SYNOPSIS
#
# # Add Chromium to the list of inverted windows and restart compton
# compton-invert -a Chromium-browser -s -r
#
# # Invert the colors of an interactively selected window
# compton-invert -Asr
#
# # Restore the colors of an interactively selected window
# compton-invert -Dsr
#
# DESCRIPTION
#
# The window list is maintained in ~/.compton-invert, one window class per line. The duplicate lines are removed.
#
# OPTIONS
#
#     -a CLASS -- add a new window class to the list
#     -d CLASS -- remove a window class from the list
#     -A -- add a window interactively
#     -D -- remove a window interactively
#     -l -- print the window list, including the current modifications
#     -s -- save the modifications from this call back to the stored list
#     -r -- restart compton (does not fork); no further options are read
#
# The -a and -d switches do not modify the saved list on their own. Use -s. The order of the arguments matters.
#
# The -A and -D switches are designed to be bound to some hotkeys.
# COPYRIGHT
#
# Copyright (C) 2015 Wojciech Siewierski
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/.
############################################

CONFIG=$HOME/.config/dotfiles/compton-invert

IFS=$'\n'
if [ -f "$CONFIG" ]; then
    INVERTED=($(< $CONFIG))
else
    INVERTED=()
fi
unset IFS

select-window()
{
    xprop WM_CLASS | sed 's/.*"\(.*\)"/\1/' || exit 2
}

COMMAND=(compton -b)

while getopts "Aa:Dd:lsr" ARG; do
    case "$ARG" in
        A)                      # add (interactive)
            OPTARG=$(select-window)
            ;&
        a)                      # add
            INVERTED+=$OPTARG
            ;;
        D)                      # add (interactive)
            OPTARG=$(select-window)
            ;&
        d)                      # delete
            TMP=($OPTARG)
            INVERTED=(${INVERTED:|TMP})
            ;;
        l)                      # list
            print ${(j:\n:)INVERTED}
            ;;
        s)                      # save
            print ${(j:\n:)INVERTED} > $CONFIG
            ;;
        r)  print "Option -r is obsolete. compton will always be restarted" # run
            ;;
        *)
            exit 1
            ;;
    esac
    INVERTED=(${(u)INVERTED})
done
shift $((OPTIND-1))

for CLASS in $INVERTED; do
	COMMAND=($COMMAND --invert-color-include class_g=\"$CLASS\")
done

pkill -x compton
exec $=COMMAND
