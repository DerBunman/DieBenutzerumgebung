#!/usr/bin/env zsh
# =====================================
# << THIS FILE IS MANAGED BY ANSIBLE >>
# =====================================
#
# DO NOT EDIT THIS FILE - CHANGES WILL BE OVERWRITTEN
# INSTEAD CHANGE THIS FILE IN THE ANSIBLE REPOSITORY.

# overwrite compinit if we use sudo so we wont
# get the compaudit messages
if [ $UID -eq 0 ]; then
	autoload -U compinit
	compinit -i -u -d ~/.zplug/zcompdump
	compinit() {
		notify-send compinit -- "$*"
	}
fi

## supresses these dbus warnings
# http://computing.help.inf.ed.ac.uk/accessibility-bus
export NO_AT_BRIDGE=1

#   _     _     _
#  | |__ (_)___| |_ ___  _ __ _   _
#  | '_ \| / __| __/ _ \| '__| | | |
#  | | | | \__ \ || (_) | |  | |_| |
#  |_| |_|_|___/\__\___/|_|   \__, |
#                             |___/
# size and location
SAVEHIST=10000
HISTSIZE=10000
HISTFILE=~/.zsh_history

# Report command running time if it is more than 3 seconds
REPORTTIME=3

#            _              _
#   ___  ___| |_ ___  _ __ | |_ ___
#  / __|/ _ \ __/ _ \| '_ \| __/ __|
#  \__ \  __/ || (_) | |_) | |_\__ \
#  |___/\___|\__\___/| .__/ \__|___/
#                    |_|

# prevent > redirection from truncating the given file if it already exists
# use >! or >>! to force
setopt NOCLOBBER

# Do not print the directory stack after pushd or popd. 
setopt PUSHD_SILENT

# Add commands to history as they are entered, don't wait for shell to exit
setopt INC_APPEND_HISTORY

# Also remember command start time and duration
setopt EXTENDED_HISTORY

# Do not keep duplicate commands in history
setopt HIST_IGNORE_ALL_DUPS

# Do not remember commands that start with a whitespace
setopt HIST_IGNORE_SPACE

# remove superfluous blanks from history items
setopt HIST_REDUCE_BLANKS

# allow comments in interactive shells
setopt INTERACTIVE_COMMENTS

# Correct spelling of all arguments in the command line
#setopt CORRECT_ALL
# autodir/cd tools
setopt AUTOCD AUTOPUSHD PUSHDIGNOREDUPS

# Whenever a command completion or spelling correction is attempted,
# make sure the entire command path is hashed first. This makes the first
# completion slower but avoids false reports of spelling errors.
setopt HASH_LIST_ALL

#               _                                  _      _
#    __ _ _   _| |_ ___   ___ ___  _ __ ___  _ __ | | ___| |_ ___
#   / _` | | | | __/ _ \ / __/ _ \| '_ ` _ \| '_ \| |/ _ \ __/ _ \
#  | (_| | |_| | || (_) | (_| (_) | | | | | | |_) | |  __/ ||  __/
#   \__,_|\__,_|\__\___/ \___\___/|_| |_| |_| .__/|_|\___|\__\___|
#                                           |_|
zstyle ':completion:*' menu select
# Enable autocompletion
zstyle ':completion:*' completer _complete _correct _approximate

# use cache
test -d .zsh/cache || mkdir -p ~/.zsh/cache
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# Fuzzy matching of completions for when you mistype them:
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# Ignore completion functions for commands you donâ€™t have:
zstyle ':completion:*:functions' ignored-patterns '_*'


#   ______ _  ___ _ __
#  |_  / _` |/ _ \ '_ \
#   / / (_| |  __/ | | |
#  /___\__, |\___|_| |_|
#      |___/
source "${HOME}/.zshrc.zgen"

# load zsh notify only on desktops
if [ ! -z "$DISPLAY" ]; then
	zstyle ':notify:*' error-title "Command failed (in #{time_elapsed} seconds)"
	zstyle ':notify:*' success-title "Command finished (in #{time_elapsed} seconds)"
	# the icons have to be a real path, not some symlink or shit like that
	zstyle ':notify:*' error-icon "$HOME/.repos/dotfiles/data/icons/status/dialog-error.png"
	zstyle ':notify:*' success-icon "$HOME/.repos/dotfiles/data/icons/status/dialog-info.png"
fi

#                                _                _ _  ___  _
#   _ __   _____      _____ _ __| | _____   _____| / |/ _ \| | __
#  | '_ \ / _ \ \ /\ / / _ \ '__| |/ _ \ \ / / _ \ | | | | | |/ /
#  | |_) | (_) \ V  V /  __/ |  | |  __/\ V /  __/ | | |_| |   <
#  | .__/ \___/ \_/\_/ \___|_|  |_|\___| \_/ \___|_|_|\___/|_|\_\
#  |_|
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#               _        _                 _           _                   _
#    __ _ _   _| |_ ___ | | ___   __ _  __| |  _______| |__  _ __ ___   __| |
#   / _` | | | | __/ _ \| |/ _ \ / _` |/ _` | |_  / __| '_ \| '__/ __| / _` |
#  | (_| | |_| | || (_) | | (_) | (_| | (_| |  / /\__ \ | | | | | (__ | (_| |
#   \__,_|\__,_|\__\___/|_|\___/ \__,_|\__,_| /___|___/_| |_|_|  \___(_)__,_|
# all .zsh files in ~/.zshrc.d will be executed
[[ -d ~/.zshrc.d ]] && for file in ~/.zshrc.d/*zsh; do
	source "${file}"
done


#               _        _                 _
#    __ _ _   _| |_ ___ | | ___   __ _  __| |
#   / _` | | | | __/ _ \| |/ _ \ / _` |/ _` |
#  | (_| | |_| | || (_) | | (_) | (_| | (_| |
#   \__,_|\__,_|\__\___/|_|\___/ \__,_|\__,_|
#
autoload -U colors vcs_info
colors

fpath=(~/.zshfunctions $fpath)
autoload ${$(echo ~/.zshfunctions/*(@)):t} ${$(echo ~/.zshfunctions/*(.)):t}


#         _   __  __           _
#  __   _(_) |  \/  | ___   __| | ___
#  \ \ / / | | |\/| |/ _ \ / _` |/ _ \
#   \ V /| | | |  | | (_) | (_| |  __/
#    \_/ |_| |_|  |_|\___/ \__,_|\___|
# enable vi mode
bindkey -v

## unbind escape ...
bindkey -r '\e'

## ... bind to jj ...
bindkey jj vi-cmd-mode

## change keytimeout to 20 ms
export KEYTIMEOUT=20

## Better searching in command mode
bindkey -M vicmd '?' history-incremental-search-backward
bindkey -M vicmd '/' history-incremental-search-forward
bindkey -M vicmd "k" up-line-or-beginning-search
bindkey -M vicmd "j" down-line-or-beginning-search
bindkey -M vicmd "k" up-line-or-beginning-search
bindkey -M vicmd "j" down-line-or-beginning-search

#   _                   _        __  _
#  (_)_ __  _ __  _   _| |_     / / | | _____ _   _ ___
#  | | '_ \| '_ \| | | | __|   / /  | |/ / _ \ | | / __|
#  | | | | | |_) | |_| | |_   / /   |   <  __/ |_| \__ \
#  |_|_| |_| .__/ \__,_|\__| /_/    |_|\_\___|\__, |___/

zle -N zle-line-init
#zle -N zle-keymap-select

# these are for backward-kill-word
backward-kill-dir () {
	#WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
	local WORDCHARS=${WORDCHARS/\/}
	zle backward-kill-word
}
zle -N backward-kill-dir
# e^? = esc (then release esc) backspace
bindkey '\e^?' backward-kill-dir
# ^H = ctrl-backspace
bindkey '^H' backward-kill-dir

# home and end
bindkey  "^[[H" beginning-of-line
bindkey  "^[[F" end-of-line

# and ctrl-a/ctrl-e
bindkey  "^a" beginning-of-line
bindkey  "^e" end-of-line

# ctrl left/right
# urxvt/rxvt-unicode (and maybe others):
bindkey "^[Od" backward-word
bindkey "^[Oc" forward-word
# terminator, konsole and xterm (and maybe others):
bindkey "^[[1;5D" backward-word
bindkey "^[[1;5C" forward-word


# edit commandline in vim
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line
bindkey "^v" edit-command-line

# used by vim-companion
bindkey '^P' up-history
bindkey '^N' down-history

#   _     _     _
#  | |__ (_)___| |_ ___  _ __ _   _
#  | '_ \| / __| __/ _ \| '__| | | |
#  | | | | \__ \ || (_) | |  | |_| |
#  |_| |_|_|___/\__\___/|_|   \__, |
#                             |___/
bindkey '^r' history-incremental-search-backward
#bindkey '^[[A' history-substring-search-up
#bindkey '^[[B' history-substring-search-down

#    __ _____ __
#   / _|__  // _|
#  | |_  / /| |_
#  |  _|/ /_|  _|
#  |_| /____|_|
#
# Check if fzf is installed
if [[ ! -d ~/.fzf ]]; then
	git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
	~/.fzf/install --all
fi

# Setup fzf
# ---------
if [[ ! "$PATH" == *${HOME}/.fzf/bin* ]]; then
  export PATH="${PATH:+${PATH}:}${HOME}/.fzf/bin"
fi

# Auto-completion
# ---------------
[[ $- == *i* ]] && source "${HOME}/.fzf/shell/completion.zsh" 2> /dev/null

# Key bindings
# ------------
source "${HOME}/.fzf/shell/key-bindings.zsh"
